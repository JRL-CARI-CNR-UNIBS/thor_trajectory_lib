# Nome del workflow (lo vedrai nella tab "Actions" di GitHub)
name: 'CMake Build Check'

# Quando deve partire questo test?
# Come prima: su push o pull request verso il branch 'main'
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Definiamo un "lavoro" (job) che possiamo chiamare 'build'
  build:
    # Sistema operativo su cui girare (Ubuntu Ã¨ perfetto per CMake)
    runs-on: ubuntu-latest

    # Elenco dei passaggi da eseguire
    steps:
      # 1. Scarica il tuo codice
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Installa le dipendenze
      # Per un progetto CMake C++, abbiamo bisogno di 'cmake'
      # e di un compilatore (pacchetto 'build-essential')
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      # 4. Compila il progetto
      # Questo esegue la compilazione vera e propria (come 'make')
      - name: Build project

        run: # 1) Create a workspace and clone this repo
          mkdir thor_ws
          cd thor_ws
          mkdir src
          cd src
          git clone https://github.com/JRL-CARI-CNR-UNIBS/thor_trajectory_lib.git

          cd thor_trajectory_lib
          bash setup_thor_ws.sh -j 8 -b Release --install-deps
